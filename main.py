from tasks import add_task, remove_task, list_tasks, mark_completed, filter_tasks
from storage import save_tasks, load_tasks

# Prompt: # Function to show main CLI menu
def show_menu():
    """
    –í–∏–≤–æ–¥–∏—Ç—å –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —É—Å—ñ–º–∞ –æ–ø—Ü—ñ—è–º–∏.
    """
    print("\n–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:")
    print("1. –î–æ–¥–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è")
    print("2. –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è")
    print("3. –ü–æ–∑–Ω–∞—á–∏—Ç–∏ —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ")
    print("4. –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è")
    print("5. –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–∏—à–µ –≤–∏–∫–æ–Ω–∞–Ω—ñ / –∞–∫—Ç–∏–≤–Ω—ñ")
    print("6. –í–∏–π—Ç–∏")

# Prompt: # Function to choose task priority with input validation
def get_priority():
    """
    –û—Ç—Ä–∏–º—É—î –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–∏—Å–ª–æ–≤–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç –∑–∞–≤–¥–∞–Ω–Ω—è.

    :return: —Ü—ñ–ª–µ —á–∏—Å–ª–æ (1-3), —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ä—ñ–≤–Ω—é –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É
    """
    print("–û–±–µ—Ä—ñ—Ç—å –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç:")
    print("1 ‚Äî –í–∏—Å–æ–∫–∏–π üî•")
    print("2 ‚Äî –°–µ—Ä–µ–¥–Ω—ñ–π ‚è≥")
    print("3 ‚Äî –ù–∏–∑—å–∫–∏–π üí§")
    p = input("–í–≤–µ–¥—ñ—Ç—å 1, 2 –∞–±–æ 3: ")
    if p not in ('1', '2', '3'):
        print("–ù–µ–≤—ñ—Ä–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É. –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: 2.")
        return 2
    return int(p)

# Prompt: # Main program loop with task manager functionality
def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É. –û–±—Ä–æ–±–ª—è—î –≤–∑–∞—î–º–æ–¥—ñ—é –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º:
    –¥–æ–¥–∞–≤–∞–Ω–Ω—è, –≤–∏–¥–∞–ª–µ–Ω–Ω—è, –æ–Ω–æ–≤–ª–µ–Ω–Ω—è, –ø–µ—Ä–µ–≥–ª—è–¥ —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—é –∑–∞–≤–¥–∞–Ω—å.
    """
    tasks = load_tasks()

    while True:
        show_menu()
        choice = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –æ–ø—Ü—ñ—ó: ")

        if choice == '1':
            title = input("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –∑–∞–≤–¥–∞–Ω–Ω—è: ")
            priority = get_priority()
            add_task(tasks, title, priority)
            save_tasks(tasks)

        elif choice == '2':
            list_tasks(tasks, header="üóëÔ∏è –í–∏–±–µ—Ä—ñ—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:")
            try:
                idx = int(input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ")) - 1
                remove_task(tasks, idx)
                save_tasks(tasks)
            except ValueError:
                print("‚ùå –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å.")

        elif choice == '3':
            list_tasks(tasks, header="‚òëÔ∏è –í–∏–±–µ—Ä—ñ—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –ø–æ–∑–Ω–∞—á–µ–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–æ–≥–æ:")
            try:
                idx = int(input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∑–∞–≤–¥–∞–Ω–Ω—è, —è–∫–µ –≤–∏–∫–æ–Ω–∞–Ω–æ: ")) - 1
                mark_completed(tasks, idx)
                save_tasks(tasks)
            except ValueError:
                print("‚ùå –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å.")

        elif choice == '4':
            list_tasks(tasks, header="üìã –í—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è:")

        elif choice == '5':
            print("–û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—É—Å –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó:")
            print("–≤–∏–∫–æ–Ω–∞–Ω—ñ ‚Äî –ª–∏—à–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ")
            print("–∞–∫—Ç–∏–≤–Ω—ñ ‚Äî —Ç—ñ, —â–æ —â–µ –Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–æ")
            status_input = input("–í–≤–µ–¥—ñ—Ç—å —Å—Ç–∞—Ç—É—Å (–≤–∏–∫–æ–Ω–∞–Ω—ñ / –∞–∫—Ç–∏–≤–Ω—ñ): ").lower()

            # Prompt: # Convert Ukrainian input into task status keywords
            if status_input == "–≤–∏–∫–æ–Ω–∞–Ω—ñ":
                status = "completed"
                print("‚úÖ –í–∏–∫–æ–Ω–∞–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è:")
            elif status_input == "–∞–∫—Ç–∏–≤–Ω—ñ":
                status = "active"
                print("üü¢ –ê–∫—Ç–∏–≤–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è:")
            else:
                print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Å—Ç–∞—Ç—É—Å.")
                continue

            filter_tasks(tasks, status)

        elif choice == '6':
            save_tasks(tasks)
            print("–ó–∞–≤–¥–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ. –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
            break
        else:
            print("–ù–µ–≤—ñ—Ä–Ω–∞ –æ–ø—Ü—ñ—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")

if __name__ == "__main__":
    main()
