# Prompt: # Function to add a task with optional priority
def add_task(tasks, title, priority=2):
    """
    –î–æ–¥–∞—î –Ω–æ–≤–µ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–æ —Å–ø–∏—Å–∫—É.

    :param tasks: —Å–ø–∏—Å–æ–∫ —ñ—Å–Ω—É—é—á–∏—Ö –∑–∞–≤–¥–∞–Ω—å
    :param title: –Ω–∞–∑–≤–∞ –Ω–æ–≤–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è
    :param priority: —á–∏—Å–ª–æ–≤–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç (1-3)
    """
    task = {"title": title, "completed": False, "priority": priority}
    tasks.append(task)
    print("‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ.")

# Prompt: # Function to remove task by index with validation
def remove_task(tasks, index):
    """
    –í–∏–¥–∞–ª—è—î –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º.

    :param tasks: —Å–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å
    :param index: —ñ–Ω–¥–µ–∫—Å –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    """
    if 0 <= index < len(tasks):
        task = tasks.pop(index)
        print(f"üóëÔ∏è –ó–∞–≤–¥–∞–Ω–Ω—è '{task['title']}' –≤–∏–¥–∞–ª–µ–Ω–æ.")
    else:
        print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —ñ–Ω–¥–µ–∫—Å.")

# Prompt: # Function to mark task as completed
def mark_completed(tasks, index):
    """
    –ü–æ–∑–Ω–∞—á–∞—î –∑–∞–≤–¥–∞–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ.

    :param tasks: —Å–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å
    :param index: —ñ–Ω–¥–µ–∫—Å –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    """
    if 0 <= index < len(tasks):
        tasks[index]["completed"] = True
        print("‚òëÔ∏è –ó–∞–≤–¥–∞–Ω–Ω—è –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ.")
    else:
        print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —ñ–Ω–¥–µ–∫—Å.")

# Prompt: # Function to display all tasks with header and formatting
def list_tasks(tasks, header=None):
    """
    –í–∏–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å –∑ –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º.

    :param tasks: —Å–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å
    :param header: –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–µ–¥ –≤–∏–≤–æ–¥–æ–º
    """
    if header:
        print(header)
    if not tasks:
        print("üì≠ –°–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.")
        return
    for i, task in enumerate(tasks, 1):
        status = "‚úÖ" if task["completed"] else "‚ùå"
        print(f"{i}. {task['title']} [{status}] –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç: {task['priority']}")

# Prompt: # Filter tasks by completed or active and display them
def filter_tasks(tasks, status):
    """
    –§—ñ–ª—å—Ç—Ä—É—î –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º: –≤–∏–∫–æ–Ω–∞–Ω—ñ –∞–±–æ –∞–∫—Ç–∏–≤–Ω—ñ.

    :param tasks: —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –∑–∞–≤–¥–∞–Ω—å
    :param status: 'completed' –∞–±–æ 'active'
    """
    if status == "completed":
        filtered = [t for t in tasks if t["completed"]]
    elif status == "active":
        filtered = [t for t in tasks if not t["completed"]]
    else:
        print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Å—Ç–∞—Ç—É—Å.")
        return
    list_tasks(filtered)
